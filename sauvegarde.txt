/* $user = new User();
        $user->setEmail('admin@gmail.com');
        $user->setFirstName('Admin');
        $user->setLastName('Admin');
        $user->setPhoneNumber('06 06 06 06 06');
        $user->setRoles([
            'ROLE_ADMIN',
            'ROLE_USER'
        ]);
        $password = $this->hasher->hashPassword($user, 'Admin123@');
        $user->setPassword($password);
        $manager->persist($user);
        $manager->flush();

        for ($i = 1; $i <= 50; $i++) {
            $service = new Services();
            $service->setTitle("Service $i");
            $service->setDescription("Description du service $i");
            $service->setQuantity(rand(1, 100));
            $service->setUnitCost(rand(1, 1000));
            $service->setTotalPrice($service->getQuantity() * $service->getUnitCost());
            $service->setCreatedAt(new \DateTime());
        }        
        */



        $quotations = $manager->getRepository(Quotation::class)->findAll();
        $invoices = $manager->getRepository(Invoice::class)->findAll();
        $credits = $manager->getRepository(Credit::class)->findAll();
        for ($i = 1; $i <= 3; $i++) {
            $service = new Services();
            $service->setTitle("Service $i commun");
            $service->setDescription("Description du service $i commun");
            $service->setQuantity(rand(1, 10));
            $service->setUnitCost(rand(50, 200));
            $service->setTotalPrice($service->getQuantity() * $service->getUnitCost());
            $service->setCreatedAt(new \DateTime());
            $manager->persist($service);
        
            foreach ($quotations as $quotation) {
                $service->setQuotation($quotation);
            }
        
            foreach ($invoices as $invoice) {
                $service->setInvoice($invoice);
            }
        
            foreach ($credits as $credit) {
                $service->setCredit($credit);
            }
        }      